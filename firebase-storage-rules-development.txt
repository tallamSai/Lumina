# Firebase Storage Rules - Development Configuration
# Copy these rules to Firebase Console > Storage > Rules

# DEVELOPMENT RULES (TEMPORARY - FOR LOCALHOST TESTING)
# ⚠️ WARNING: These rules make storage public! Only use for development.
# Replace with production rules before deploying to production.

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow all operations for development (localhost)
    match /{allPaths=**} {
      allow read, write: if true;
    }
  }
}

# PRODUCTION RULES (USE THESE FOR PRODUCTION DEPLOYMENT)
# Copy these rules to Firebase Console > Storage > Rules when deploying

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // User-specific video storage
    match /users/{uid}/videos/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }
    
    // Analysis data storage
    match /analyses/{analysisId}/{fileName} {
      allow read, write: if request.auth != null;
    }
    
    // Public assets (if needed)
    match /public/{allPaths=**} { 
      allow read; 
    }
  }
}

# Firestore Rules (Same for both development and production)
# Copy these rules to Firebase Console > Firestore > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User analyses collection
    match /analyses/{document} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.uid == resource.data.userId);
    }
    
    // Analysis metadata
    match /analysis_metadata/{document} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.uid == resource.data.userId);
    }
    
    // User profiles (if needed)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}

# INSTRUCTIONS:
# 1. Go to Firebase Console (https://console.firebase.google.com/)
# 2. Select your project: lumina-5aac9
# 3. Go to Storage > Rules
# 4. Replace the existing rules with the DEVELOPMENT RULES above
# 5. Click "Publish"
# 6. Clear your browser cache and restart your dev server
# 7. Try uploading again

# FOR PRODUCTION:
# 1. Deploy your app to Vercel, Netlify, or Firebase Hosting
# 2. Replace Storage rules with PRODUCTION RULES above
# 3. CORS issues will be resolved in production environment
